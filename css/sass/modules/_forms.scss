fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  // margin-bottom: $line-height-computed;
  // font-size: ($font-size-base * 1.5);
  line-height: inherit;
  // color: $legend-color;
  border: 0;
  // border-bottom: 1px solid $legend-border-color;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
  font-weight: bold;
}

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] { @include box-sizing(border-box); }

input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

input[type="file"] { display: block; }

input[type="range"] {
  display: block;
  width: 100%;
}

select[multiple],
select[size] { height: auto; }

input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus { }

output {
  display: block;
  // padding-top: ($padding-base-vertical + 1);
  // font-size: $font-size-base;
  // line-height: $line-height-base;
  // color: $input-color;
}

.form-control {
  display: block;
  width: 100%;
  // height: ; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: 10px 14px;
  font-size: $font-size;
  line-height: $line-height;
  color: #ccc;
  background-color: #fff;
  background-image: none;
  border: 1px solid #000;
  border-radius: 3px;

  @include transition(border-color ease $transitions-timing);

  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    // background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & { cursor: $cursor-disabled; }
}

textarea.form-control { height: auto; }

::-webkit-input-placeholder { }
:-moz-placeholder { }
::-moz-placeholder { }
:-ms-input-placeholder { }

:focus:-ms-input-placeholder { }
:focus::-moz-placeholder { }
:focus:-moz-placeholder { }
:focus::-webkit-input-placeholder { }

// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] { -webkit-appearance: none; }

// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] { line-height: $line-height; }
}

.form-group { margin-bottom: 20px; }

.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;

  label {
    // min-height: $line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 20px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -20px;
  margin-top: 4px \9;
}

.radio + .radio,
.checkbox + .checkbox { margin-top: -5px; }

.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & { cursor: $cursor-disabled; }
}

.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & { cursor: $cursor-disabled; }
}

.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label { cursor: $cursor-disabled; }
  }
}